{"version":3,"sources":["components/TodoListItem.tsx","components/TodoList.tsx","components/AddTodoForm.tsx","App.tsx","index.tsx"],"names":["TodoListItem","_ref","todo","toggleTodo","react_default","a","createElement","style","textDecoration","complete","undefined","type","checked","onClick","readOnly","text","TodoList","todos","map","TodoListItem_TodoListItem","key","uuidv4","AddTodoForm","addTodo","_useState","useState","_useState2","Object","slicedToArray","setText","onChange","event","target","value","preventDefault","console","log","initialTodos","App","setTodos","className","TodoList_TodoList","selectedTodo","newTodos","objectSpread","AddTodoForm_AddTodoForm","newTodo","concat","toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"iKAOaA,EAAgC,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,WACpD,OACEC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEC,MAAO,CAAEC,eAAgBN,EAAKO,SAAW,oBAAiBC,IAE1DN,EAAAC,EAAAC,cAAA,SACEK,KAAK,WACLC,QAASV,EAAKO,SACdI,QAAS,kBAAMV,EAAWD,IAC1BY,UAAQ,IAETZ,EAAKa,QCVDC,EAA4B,SAAAf,GAA2B,IAAxBgB,EAAwBhB,EAAxBgB,MAAOd,EAAiBF,EAAjBE,WACjD,OACEC,EAAAC,EAAAC,cAAA,UACGW,EAAMC,IAAI,SAAChB,GAAD,OACTE,EAAAC,EAAAC,cAACa,EAAD,CAAcC,IAAKC,cAAUnB,KAAMA,EAAMC,WAAYA,QCPhDmB,EAA+B,SAAArB,GAAiB,IAAdsB,EAActB,EAAdsB,QAAcC,EACnCC,mBAAS,IAD0BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpDT,EADoDW,EAAA,GAC9CG,EAD8CH,EAAA,GAoB3D,OACEtB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOmB,SAnBF,SAACC,GACpBF,EAAQE,EAAMC,OAAOC,UAmBnB7B,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASE,QAhBN,SAClBkB,GAEAA,EAAMG,iBACNX,EAAQR,GACRc,EAAQ,MAWN,YAGAzB,EAAAC,EAAAC,cAAA,UACEO,QAAS,SAACkB,GACRA,EAAMG,iBACNC,QAAQC,IAAIL,KAHhB,kBAQA3B,EAAAC,EAAAC,cAAA,UAAQO,QAnBe,SAACkB,GAC1BA,EAAMG,iBACNC,QAAQC,IAAIL,KAiBV,wBCnCAM,EAAuB,CAC3B,CACEtB,KAAM,eACNN,UAAU,GAEZ,CACEM,KAAM,YACNN,UAAU,IAiCC6B,MA7Bf,WAAe,IAAAd,EACaC,mBAASY,GADtBX,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNP,EADMS,EAAA,GACCa,EADDb,EAAA,GAqBb,OACEtB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACbpC,EAAAC,EAAAC,cAACmC,EAAD,CAAUxB,MAAOA,EAAOd,WApBT,SAACuC,GAClB,IAAMC,EAAW1B,EAAMC,IAAI,SAAChB,GAC1B,OAAIA,IAASwC,EACJf,OAAAiB,EAAA,EAAAjB,CAAA,GACFzB,EADL,CAEEO,UAAWP,EAAKO,WAGbP,IAETqC,EAASI,MAWPvC,EAAAC,EAAAC,cAACuC,EAAD,CAAatB,QARQ,SAACR,GACxB,IAAM+B,EAAU,CAAE/B,OAAMN,UAAU,GAClC8B,EAAQ,GAAAQ,OAAApB,OAAAqB,EAAA,EAAArB,CAAKV,GAAL,CAAY6B,UC5BXG,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,WAAP,KACElD,EAAAC,EAAAC,cAACiD,EAAD","file":"static/js/main.0d328fc4.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {\n  todo: Todo;\n  toggleTodo: ToggleTodo;\n}\n\nexport const TodoListItem: React.FC<Props> = ({ todo, toggleTodo }) => {\n  return (\n    <li>\n      <label\n        style={{ textDecoration: todo.complete ? \"line-through\" : undefined }}\n      >\n        <input\n          type=\"checkbox\"\n          checked={todo.complete}\n          onClick={() => toggleTodo(todo)}\n          readOnly\n        />\n        {todo.text}\n      </label>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoListItem } from \"./TodoListItem\";\n\ninterface Props {\n  todos: Todo[];\n  toggleTodo: ToggleTodo;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, toggleTodo }) => {\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoListItem key={uuidv4()} todo={todo} toggleTodo={toggleTodo} />\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from \"react\";\n\ninterface Props {\n  addTodo: AddTodo;\n}\n\nexport const AddTodoForm: React.FC<Props> = ({ addTodo }) => {\n  const [text, setText] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n  };\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    addTodo(text);\n    setText(\"\");\n  };\n\n  const handleAnotherClick = (event: any) => {\n    event.preventDefault();\n    console.log(event);\n  };\n\n  return (\n    <form>\n      <input type=\"text\" onChange={handleChange} />\n      <button type=\"submit\" onClick={handleClick}>\n        Add Todo\n      </button>\n      <button\n        onClick={(event) => {\n          event.preventDefault();\n          console.log(event);\n        }}\n      >\n        another button\n      </button>\n      <button onClick={handleAnotherClick}>yet another button</button>\n    </form>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { TodoList } from \"./components/TodoList\";\nimport { AddTodoForm } from \"./components/AddTodoForm\";\n\nconst initialTodos: Todo[] = [\n  {\n    text: \"walk the dog\",\n    complete: false,\n  },\n  {\n    text: \"write app\",\n    complete: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const toggleTodo = (selectedTodo: Todo) => {\n    const newTodos = todos.map((todo) => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo: AddTodo = (text: string) => {\n    const newTodo = { text, complete: false };\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <AddTodoForm addTodo={addTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}